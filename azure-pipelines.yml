trigger:
  branches:
    include:
    - master
    - feature/ci-dev
  paths:
    exclude:
    - README.md
    - LICENSE
    - .travis.yml
    - book.toml
    - docker/*
    - vagrant/*
    - manual/*
    - docs/*

jobs:
- job: Linux
  timeoutInMinutes: 120
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      arch:
        containerImage: immunant/c2rust:archlinux-base-latest
      debian9:
        containerImage: immunant/c2rust:debian-stretch-latest
      debian10:
        containerImage: immunant/c2rust:debian-buster-latest
      fedora29:
        containerImage: immunant/c2rust:fedora-29-latest
      ubuntu16:
        containerImage: immunant/c2rust:ubuntu-xenial-latest
      ubuntu18:
        containerImage: immunant/c2rust:ubuntu-bionic-latest
  container: $[ variables['containerImage'] ]
  steps:
  - script: |
      # rust was installed for the `docker` user, not the user azure creates
      # but cargo and rustup can be controlled via $CARGO_HOME and $RUSTUP_HOME.
      # NOTE: $HOME is not set correctly for the azure user; don't rely on it.
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      cargo build --release
    displayName: 'Fast build against host clang/LLVM'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      python3 ./scripts/test_translator.py ./tests
    displayName: 'Test translator (fast build)'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      cargo clean
    displayName: 'Cargo clean'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      export GNUPGHOME=$AGENT_TEMPDIRECTORY
      python3 ./scripts/build_translator.py --with-llvm-version=10.0.1
    displayName: 'Developer build against local LLVM 10'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      python3 ./scripts/test_translator.py ./tests
    displayName: 'Test translator against developer build (LLVM 10)'

  # - script: |
  #     export PATH="/home/docker/.cargo/bin:$PATH"
  #     export RUSTUP_HOME=/home/docker/.rustup
  #     export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
  #     cargo clean && rm -rf build
  #   displayName: 'Cargo clean && rm -rf build'

  # - script: |
  #     export PATH="/home/docker/.cargo/bin:$PATH"
  #     export RUSTUP_HOME=/home/docker/.rustup
  #     export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
  #     python3 ./scripts/build_translator.py --with-llvm-version=8.0.0
  #   displayName: 'Developer build against local LLVM 8'

  # - script: |
  #     export PATH="/home/docker/.cargo/bin:$PATH"
  #     export RUSTUP_HOME=/home/docker/.rustup
  #     export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
  #     python3 ./scripts/test_translator.py ./tests
  #   displayName: 'Test translator against developer build (LLVM 8)'

- job: Darwin
  timeoutInMinutes: 180
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      ./scripts/provision_mac.sh
      # speeds up provisioning
      export HOMEBREW_NO_AUTO_UPDATE=1
      # helps the `curl-sys` create determine how to link in libcurl.
      brew install pkg-config
      # we want to use the host curl because it has the `HTTP2` feature
      # whereas the brew version does not, this causes curl-sys to
      # build its own curl which then fails to link on Azure Devops.
      brew remove curl
      # prepare environment for the following steps
      source $HOME/.cargo/env
      brew info llvm
    displayName: 'Provision macOS'

  - script: |
      export LLVM_CONFIG_PATH=$(brew --prefix llvm)/bin/llvm-config
      cargo build --release
    displayName: 'Fast build against host clang/LLVM'

  - script: python3 ./scripts/test_translator.py  ./tests
    displayName: 'Test translator (fast build)'

  - script: cargo clean
    displayName: 'Cargo clean'

    # LLVM 10.0.X on macOS 10.15 and fails with a CMake error but later
    # LLVM releases do not. See this issue for an example of the error.
    # https://github.com/spack/spack/issues/19905#issuecomment-727268589
  - script: python3 ./scripts/build_translator.py --with-llvm-version=11.1.0
    displayName: 'Developer build against local LLVM 11'

  - script: python3 ./scripts/test_translator.py ./tests
    displayName: 'Test translator against developer build (LLVM 11)'
